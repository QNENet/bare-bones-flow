<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>microservice</artifactId>
		<groupId>org.osgi.enroute.examples</groupId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<groupId>org.osgi.enroute.examples.microservice</groupId>
	<artifactId>vflow</artifactId>
	<description>The vflow DS component - built using OSGi enRoute R7</description>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<vaadin.version>12.0.3</vaadin.version>
	</properties>

	<repositories>
		<!-- Repository used by many Vaadin add-ons -->
		<repository>
			<id>Vaadin Directory</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<!-- Repository needed for prerelease versions of Vaadin <repository> <id>vaadin-prereleases</id> 
			<url>https://maven.vaadin.com/vaadin-prereleases</url> </repository> -->
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<type>pom</type>
				<scope>import</scope>
				<version>${vaadin.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.osgi.enroute</groupId>
			<artifactId>osgi-api</artifactId>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.osgi.enroute</groupId>
			<artifactId>test-bundles</artifactId>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-core</artifactId>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>flow-osgi</artifactId>
		</dependency>

		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>osgi.cmpn</artifactId>
			<version>6.0.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
			<version>6.0.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Added to provide logging output as Flow uses -->
		<!-- the unbound SLF4J no-operation (NOP) logger implementation -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<!-- Expected to inherit configuration from a parent enRoute pom. This 
				includes -contract definitions and maven-jar-plugin setup -->
<!--		<plugin>
				<groupId>biz.aQute.bnd</groupId>
				<artifactId>bnd-maven-plugin</artifactId>
			</plugin>   -->	
			
			
			                <plugin>
                    <groupId>biz.aQute.bnd</groupId>
                    <artifactId>bnd-maven-plugin</artifactId>
                    <version>${bnd.version}</version>
                    <configuration>
                        <bnd><![CDATA[
Bundle-SymbolicName: ${project.groupId}.${project.artifactId}
-sources: true
-contract: *
Vaadin-OSGi-Extender: true
]]></bnd>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>bnd-process</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
			
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-dependencies</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<includes>**/webjars/**</includes>
							<excludeTypes>pom</excludeTypes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
             <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>copy-frontend</id>
                        <phase>generate-resources</phase>
                        <configuration>
                            <tasks>
                                <mkdir dir="${project.build.directory}/generated-resources/frontend/bower_components"/>
                                <copy todir="${project.build.directory}/generated-resources/frontend/bower_components">
                                    <fileset dir="${project.build.directory}/dependency/META-INF/resources/webjars/"/>
                                </copy>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>add-resource</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>add-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/generated-resources</directory>
                                    <targetPath/>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            

		</plugins>
	</build>
</project>
